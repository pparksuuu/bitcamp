<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespace 이름은 SQL을 찾을 때 사용하는 그룹명이다.
                따라서 SQL문을 사용하는 DAO 클래스 이름과 같게 하면 
                유지보수할 떄 알아보기 쉽다. 
                단순히 알아보기 쉬울 뿐만 아니라 
                스프링 프레임워크와 연동할 때 DAO객체를 자동생성하고
                그 메서드를 자동생성할 때 사용할 수 있다.-->
<mapper namespace="bitcamp.java106.pms.dao.MemberDao">
  <resultMap type="Member" id="MemberMap">  
    <id column="mid" property="id"/>
    <result column="email" property="email"/>
    <result column="pwd" property="password"/>
  </resultMap>
  
  
  <select id="selectList" 
        resultMap="MemberMap" parameterType="map">
    select mid, email 
    from pms_member
  </select>
  
  <!-- ArrayList<Member> list = new ArrayList<>();
       while (rs.next()) {
        Member member = new Member();
        member.setId(rs.getString("id"));
        ....
        list.add(member);
       } 
       -->
  
  
  <insert id="insert" parameterType="Member"
        useGeneratedKeys="true" keyColumn="bno" keyProperty="no">
    insert into pms_member(mid,email,pwd) 
    values(#{id},#{email},sha2(#{password},224))
</insert>
  
  <!-- 파라미터의 타입이 primitive type이나 wrapper 클래스, String 클래스인 경우 ,
               값을 꺼낼 때 프로퍼티 이름을 마음대로 해도 된다.
  -->
  <select id="selectOne" 
        resultMap="MemberMap" parameterType="String">
     select mid,email from pms_member where mid=#{value}
  </select>  
  
  <update id="update" parameterType="Member">
    update pms_member set 
    email=#{email}, 
    pwd=sha2(#{password},224) 
    where mid=#{id}
  </update>
  
  <delete id="delete" parameterType="String">
    delete from pms_member where mid=#{value}
  </delete>
</mapper>